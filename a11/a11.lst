     1                                 %line 1+1 a11.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 [section .data]
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 LF equ 10
    28                                 NULL equ 0
    29                                 SPACE equ 0x20
    30                                 
    31                                 TRUE equ 1
    32                                 FALSE equ 0
    33                                 
    34                                 EXIT_SUCCESS equ 0
    35                                 EXIT_NOSUCCESS equ 1
    36                                 
    37                                 STDIN equ 0
    38                                 STDOUT equ 1
    39                                 STDERR equ 2
    40                                 
    41                                 SYS_read equ 0
    42                                 SYS_write equ 1
    43                                 SYS_open equ 2
    44                                 SYS_close equ 3
    45                                 SYS_fork equ 57
    46                                 SYS_exit equ 60
    47                                 SYS_creat equ 85
    48                                 SYS_time equ 201
    49                                 
    50                                 O_CREAT equ 0x40
    51                                 O_TRUNC equ 0x200
    52                                 O_APPEND equ 0x400
    53                                 
    54                                 O_RDONLY equ 000000
    55                                 O_WRONLY equ 000001
    56                                 O_RDWR equ 000002
    57                                 
    58                                 S_IRUSR equ 00400
    59                                 S_IWUSR equ 00200
    60                                 S_IXUSR equ 00100
    61                                 
    62                                 LINEMAX equ 5
    63                                 CHRMAX equ 7
    64                                 
    65                                 
    66                                 
    67 00000000 55736167653A202E2F-    usageMsg db "Usage: ./benford -i <inputFileName> "
    68 00000000 62656E666F7264202D-
    69 00000000 69203C696E70757446-
    70 00000000 696C654E616D653E20 
    71 00000024 2D6F203C6F75747075-     db "-o <outputFileName> -d <T/F>", LF, NULL
    72 00000024 7446696C654E616D65-
    73 00000024 3E202D64203C542F46-
    74 00000024 3E0A00             
    75                                 
    76 00000042 4572726F722C20746F-    errMany db "Error, too many characters on the "
    77 00000042 6F206D616E79206368-
    78 00000042 617261637465727320-
    79 00000042 6F6E2074686520     
    80 00000064 636F6D6D616E64206C-     db "command line.", LF, NULL
    81 00000064 696E652E0A00       
    82                                 
    83 00000073 4572726F722C20746F-    errFew db "Error, too few characters on the "
    84 00000073 6F2066657720636861-
    85 00000073 72616374657273206F-
    86 00000073 6E2074686520       
    87 00000094 636F6D6D616E64206C-     db "command line.", LF, NULL
    88 00000094 696E652E0A00       
    89                                 
    90 000000A3 4572726F722C20696E-    errDSpec db "Error, invalid output display specifier."
    91 000000A3 76616C6964206F7574-
    92 000000A3 70757420646973706C-
    93 000000A3 617920737065636966-
    94 000000A3 6965722E           
    95 000000CB 0A00                    db LF, NULL
    96                                 
    97 000000CD 4572726F722C20696E-    errISpec db "Error, invalid input file specifier."
    98 000000CD 76616C696420696E70-
    99 000000CD 75742066696C652073-
   100 000000CD 70656369666965722E 
   101 000000F1 0A00                    db LF, NULL
   102                                 
   103 000000F3 4572726F722C20696E-    errOSpec db "Error, invalid output file specifier."
   104 000000F3 76616C6964206F7574-
   105 000000F3 7075742066696C6520-
   106 000000F3 737065636966696572-
   107 000000F3 2E                 
   108 00000118 0A00                    db LF, NULL
   109                                 
   110 0000011A 4572726F722C20696E-    errTF db "Error, invalid display option. Must be T or F."
   111 0000011A 76616C696420646973-
   112 0000011A 706C6179206F707469-
   113 0000011A 6F6E2E204D75737420-
   114 0000011A 62652054206F722046-
   115 0000011A 2E                 
   116 00000148 0A00                    db LF, NULL
   117                                 
   118 0000014A 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   119 0000014A 6E206E6F74206F7065-
   120 0000014A 6E20696E7075742066-
   121 0000014A 696C652E           
   122 00000169 0A00                    db LF, NULL
   123                                 
   124 0000016B 4572726F722C206361-    errOpenOut db "Error, can not open output file."
   125 0000016B 6E206E6F74206F7065-
   126 0000016B 6E206F757470757420-
   127 0000016B 66696C652E         
   128 0000018B 0A00                    db LF, NULL
   129                                 
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 BUFFSIZE equ 500000
   135                                 
   136                                 SKIP_LINES equ 5
   137                                 SKIP_CHARS equ 6
   138                                 
   139 0000018D 01                     nextCharIsFirst db TRUE
   140 0000018E 00000000               skipLineCount dd 0
   141 00000192 00000000               skipCharCount dd 0
   142 00000196 00                     gotDigit db FALSE
   143                                 
   144 00000197 20A1070000000000       bfMax dq BUFFSIZE
   145 0000019F 20A1070000000000       curr dq BUFFSIZE
   146                                 
   147 000001A7 00                     wasEOF db FALSE
   148                                 
   149 000001A8 4572726F7220726561-    errFileRead db "Error reading input file."
   150 000001A8 64696E6720696E7075-
   151 000001A8 742066696C652E     
   152 000001C1 50726F6772616D2074-     db "Program terminated."
   153 000001C1 65726D696E61746564-
   154 000001C1 2E                 
   155 000001D4 0A00                    db LF, NULL
   156                                 
   157                                 
   158                                 
   159                                 
   160                                 SCALE1 equ 100
   161                                 SCALE2 equ 1000
   162                                 SCALE3 equ 2500
   163                                 SCALE4 equ 5000
   164                                 
   165 000001D6 64000000               scale dd SCALE1
   166                                 
   167 000001DA 03000000               weight dd 3
   168                                 
   169 000001DE 4572726F7220777269-    errFileWrite db "Error writting output file."
   170 000001DE 7474696E67206F7574-
   171 000001DE 7075742066696C652E 
   172 000001F9 0A00                    db LF, NULL
   173                                 
   174 000001FB 0A4353203231382042-    graphHeader db LF, "CS 218 Benfords Law", LF
   175 000001FB 656E666F726473204C-
   176 000001FB 61770A             
   177 00000210 546573742052657375-     db "Test Results", LF, LF, NULL
   178 00000210 6C74730A0A00       
   179                                 
   180 0000021F 546F74616C20446174-    graphLine1 db "Total Data Points: "
   181 0000021F 6120506F696E74733A-
   182 0000021F 20                 
   183 00000232 202020202020202020-    tStr1 db "                     ", LF, LF, NULL
   184 00000232 202020202020202020-
   185 00000232 2020200A0A00       
   186                                 
   187                                 DIGITS_SIZE equ 15
   188                                 STARS_SIZE equ 50
   189                                 
   190 0000024A 2020                   graphLine2 db "  "
   191 0000024C 78                     index2 db "x"
   192 0000024D 2020                    db "  "
   193 0000024F 202020202020202020-    num2 db "               "
   194 0000024F 202020202020       
   195 0000025E 7C                      db "|"
   196 0000025F 202020202020202020-    stars2 db "                              "
   197 0000025F 202020202020202020-
   198 0000025F 202020202020202020-
   199 0000025F 202020             
   200 0000027D 202020202020202020-     db "                    "
   201 0000027D 202020202020202020-
   202 0000027D 2020               
   203 00000291 0A00                    db LF, NULL
   204                                 
   205 00000293 202020202020202020-    graphLine3 db "                     ---------------------------------------------"
   206 00000293 202020202020202020-
   207 00000293 2020202D2D2D2D2D2D-
   208 00000293 2D2D2D2D2D2D2D2D2D-
   209 00000293 2D2D2D2D2D2D2D2D2D-
   210 00000293 2D2D2D2D2D2D2D2D2D-
   211 00000293 2D2D2D2D2D2D2D2D2D-
   212 00000293 2D2D2D             
   213 000002D5 0A0A00                  db LF, LF, NULL
   214                                 
   215                                 
   216                                 
   217 000002D8 2D69                   arg2chk db "-i"
   218 000002DA 2D6F                   arg4chk db "-o"
   219 000002DC 2D64                   arg6chk db "-d"
   220 000002DE 54                     arg7chkT db "T"
   221 000002DF 46                     arg7chkF db "F"
   222                                 
   223                                 
   224                                 
   225                                 
   226                                 [section .bss]
   227                                 
   228 00000000 <gap>                  buff resb BUFFSIZE+1
   229 0007A121 <gap>                  tempString resb 50
   230                                 
   231                                 
   232                                 
   233                                 
   234                                 [section .text]
   235                                 
   236                                 
   237                                 
   238                                 
   239                                 
   240                                 
   241                                 
   242                                 
   243                                 
   244                                 
   245                                 
   246                                 
   247                                 
   248                                 
   249                                 
   250                                 
   251                                 
   252                                 
   253                                 
   254                                 
   255                                 
   256                                 
   257                                 
   258                                 
   259                                 
   260                                 
   261                                 
   262                                 
   263                                 
   264                                 
   265                                 
   266                                 
   267                                 
   268                                 
   269                                 
   270                                 
   271                                 
   272                                 
   273                                 
   274                                 
   275                                 
   276                                 
   277                                 
   278                                 
   279                                 
   280                                 
   281                                 
   282                                 [global getArguments]
   283                                 getArguments:
   284                                 
   285                                 
   286                                 
   287                                 
   288                                 
   289                                 
   290                                 
   291 00000000 50                      push rax
   292 00000001 53                      push rbx
   293 00000002 4151                    push r9
   294 00000004 4152                    push r10
   295 00000006 4989FA                  mov r10, rdi
   296 00000009 57                      push rdi
   297 0000000A 4153                    push r11
   298 0000000C 4989F3                  mov r11, rsi
   299 0000000F 56                      push rsi
   300 00000010 4154                    push r12
   301 00000012 4989D4                  mov r12, rdx
   302 00000015 52                      push rdx
   303 00000016 4155                    push r13
   304 00000018 4989CD                  mov r13, rcx
   305 0000001B 51                      push rcx
   306 0000001C 4156                    push r14
   307                                 
   308                                 
   309                                 
   310                                 
   311                                 
   312                                 
   313                                 
   314                                 
   315                                 
   316 0000001E 4983FA01                cmp r10, 1
   317 00000022 750F                    jne usageMsgDone
   318 00000024 48C7C7[00000000]        mov rdi, usageMsg
   319 0000002B E8CE020000              call printString
   320 00000030 E97F010000              jmp termArg
   321                                  usageMsgDone:
   322                                 
   323                                 
   324                                 
   325                                 
   326 00000035 4983FA07                cmp r10, 7
   327 00000039 770F                    ja manyChkDone
   328 0000003B 48C7C7[00000000]        mov rdi, errMany
   329 00000042 E8B7020000              call printString
   330 00000047 E968010000              jmp termArg
   331                                  manyChkDone:
   332                                 
   333                                 
   334                                 
   335                                 
   336 0000004C 4983FA07                cmp r10, 7
   337 00000050 720F                    jb fewChkDone
   338 00000052 48C7C7[00000000]        mov rdi, errFew
   339 00000059 E8A0020000              call printString
   340 0000005E E951010000              jmp termArg
   341                                  fewChkDone:
   342                                 
   343                                 
   344 00000063 48C7C101000000          mov rcx, 1
   345 0000006A 49C7C100000000          mov r9, 0
   346 00000071 498B1CCB                mov rbx, qword[r11+rcx*8]
   347                                 
   348                                 arg2Lp:
   349 00000075 42803C0B00              cmp byte[rbx+r9], NULL
   350 0000007A 7421                    je arg2LpEnd
   351                                 
   352 0000007C 458AB1[00000000]        mov r14b, byte[arg2chk+r9]
   353 00000083 4638340B                cmp byte [rbx+r9], r14b
   354 00000087 7503                    jne arg2err
   355                                 
   356 00000089 49FFC1                  inc r9
   357 0000008C EBE5                    jmp arg2Lp
   358                                 
   359                                 arg2err:
   360 0000008E 48C7C7[00000000]        mov rdi, errISpec
   361 00000095 E864020000              call printString
   362 0000009A E915010000              jmp termArg
   363                                 arg2LpEnd:
   364                                 
   365                                 
   366                                 
   367 0000009F 48FFC1                  inc rcx
   368 000000A2 498B1CCB                mov rbx, qword[r11+rcx*8]
   369                                 
   370 000000A6 48C7C002000000          mov rax, SYS_open
   371 000000AD 4889DF                  mov rdi, rbx
   372 000000B0 48C7C600000000          mov rsi, O_RDONLY
   373 000000B7 0F05                    syscall
   374                                 
   375 000000B9 49890424                mov qword[r12], rax
   376 000000BD 4883F800                cmp rax, 0
   377 000000C1 730F                    jae arg3End
   378 000000C3 48C7C7[00000000]        mov rdi, errOpenIn
   379 000000CA E82F020000              call printString
   380 000000CF E9E0000000              jmp termArg
   381                                 arg3End:
   382                                 
   383                                 
   384                                 
   385 000000D4 48FFC1                  inc rcx
   386 000000D7 49C7C100000000          mov r9, 0
   387 000000DE 498B1CCB                mov rbx, qword[r11+rcx*8]
   388                                 
   389                                 arg4Lp:
   390 000000E2 42803C0B00              cmp byte[rbx+r9], NULL
   391 000000E7 7421                    je arg4LpEnd
   392                                 
   393 000000E9 458AB1[00000000]        mov r14b, byte[arg4chk+r9]
   394 000000F0 4638340B                cmp byte [rbx+r9], r14b
   395 000000F4 7503                    jne arg4err
   396                                 
   397 000000F6 49FFC1                  inc r9
   398 000000F9 EBE5                    jmp arg4Lp
   399                                 
   400                                 arg4err:
   401 000000FB 48C7C7[00000000]        mov rdi, errOSpec
   402 00000102 E8F7010000              call printString
   403 00000107 E9A8000000              jmp termArg
   404                                 
   405                                 arg4LpEnd:
   406                                 
   407                                 
   408                                 
   409 0000010C 48FFC1                  inc rcx
   410 0000010F 498B1CCB                mov rbx, qword[r11+rcx*8]
   411                                 
   412 00000113 48C7C055000000          mov rax, SYS_creat
   413 0000011A 4889DF                  mov rdi, rbx
   414 0000011D 48C7C680010000          mov rsi, S_IRUSR | S_IWUSR
   415 00000124 0F05                    syscall
   416                                 
   417 00000126 49894500                mov qword[r13], rax
   418 0000012A 4883F800                cmp rax, 0
   419 0000012E 730C                    jae arg5End
   420                                 
   421 00000130 48C7C7[00000000]        mov rdi, errOpenOut
   422 00000137 E8C2010000              call printString
   423 0000013C EB79                    jmp termArg
   424                                 
   425                                 arg5End:
   426                                 
   427                                 
   428                                 
   429 0000013E 48FFC1                  inc rcx
   430 00000141 49C7C100000000          mov r9, 0
   431 00000148 498B1CCB                mov rbx, qword[r11+rcx*8]
   432                                 
   433                                 arg6Lp:
   434 0000014C 42803C0B00              cmp byte[rbx+r9], NULL
   435 00000151 741E                    je arg6LpEnd
   436                                 
   437 00000153 458AB1[00000000]        mov r14b, byte[arg6chk+r9]
   438 0000015A 4638340B                cmp byte [rbx+r9], r14b
   439 0000015E 7503                    jne arg6err
   440                                 
   441 00000160 49FFC1                  inc r9
   442 00000163 EBE5                    jmp arg6Lp
   443                                 
   444                                 arg6err:
   445 00000165 48C7C7[00000000]        mov rdi, errDSpec
   446 0000016C E88D010000              call printString
   447 00000171 EB44                    jmp termArg
   448                                 
   449                                 arg6LpEnd:
   450                                 
   451                                 
   452                                 
   453 00000173 48FFC1                  inc rcx
   454 00000176 49C7C100000000          mov r9, 0
   455 0000017D 498B1CCB                mov rbx, qword[r11+rcx*8]
   456                                 
   457                                 arg7Lp:
   458 00000181 42803C0B00              cmp byte[rbx+r9], NULL
   459 00000186 742D                    je arg7LpEnd
   460                                 
   461 00000188 458AB1[00000000]        mov r14b, byte[arg7chkT+r9]
   462 0000018F 4638340B                cmp byte [rbx+r9], r14b
   463 00000193 74EA                    je arg7Lp
   464                                 
   465 00000195 453AB1[00000000]        cmp r14b, byte[arg7chkF+r9]
   466 0000019C 7509                    jne arg7err
   467                                 
   468 0000019E 49FFC1                  inc r9
   469 000001A1 4983F902                cmp r9, 2
   470 000001A5 7400                    je arg7err
   471                                 
   472 000001A7 EBD6                    jmp arg7Lp
   473                                 
   474                                 arg7err:
   475 000001A9 48C7C7[00000000]        mov rdi, errTF
   476 000001B0 E849010000              call printString
   477 000001B5 EB00                    jmp termArg
   478                                 
   479                                 arg7LpEnd:
   480                                 
   481                                 
   482 000001B7 EB0E                    jmp skipTermArg
   483                                 termArg:
   484 000001B9 48C7C03C000000          mov rax, SYS_exit
   485 000001C0 48C7C701000000          mov rdi, EXIT_NOSUCCESS
   486 000001C7 0F05                    syscall
   487                                 skipTermArg:
   488                                 
   489                                 
   490                                 
   491                                 
   492                                 
   493                                 
   494 000001C9 415E                    pop r14
   495 000001CB 59                      pop rcx
   496 000001CC 415D                    pop r13
   497 000001CE 5A                      pop rdx
   498 000001CF 415C                    pop r12
   499 000001D1 5E                      pop rsi
   500 000001D2 415B                    pop r11
   501 000001D4 5F                      pop rdi
   502 000001D5 415A                    pop r10
   503 000001D7 4159                    pop r9
   504 000001D9 5B                      pop rbx
   505 000001DA 58                      pop rax
   506                                 
   507 000001DB C3                     ret
   508                                 
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 
   518                                 
   519                                 
   520                                 
   521                                 
   522                                 
   523                                 
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 
   531                                 
   532                                 
   533                                 
   534                                 [global int2oct]
   535                                 int2oct:
   536                                 
   537 000001DC 50                      push rax
   538 000001DD 53                      push rbx
   539 000001DE 51                      push rcx
   540 000001DF 52                      push rdx
   541 000001E0 56                      push rsi
   542 000001E1 4150                    push r8
   543 000001E3 4989F8                  mov r8, rdi
   544 000001E6 57                      push rdi
   545 000001E7 4151                    push r9
   546 000001E9 4989F1                  mov r9, rsi
   547 000001EC 4152                    push r10
   548                                 
   549                                 
   550                                 
   551                                 
   552 000001EE 4489C0                  mov eax, r8d
   553                                 
   554 000001F1 4D89CE                  mov r14, r9
   555 000001F4 48C7C700000000          mov rdi, 0
   556                                 
   557 000001FB 48C7C200000000          mov rdx, 0
   558 00000202 48C7C100000000          mov rcx, 0
   559                                 
   560                                 i2oLp:
   561 00000209 4883F800                cmp rax, 0
   562 0000020D 740C                    je exi2oLp
   563                                 
   564 0000020F BB08000000              mov ebx, 8
   565 00000214 99                      cdq
   566 00000215 F7FB                    idiv ebx
   567                                 
   568 00000217 52                      push rdx
   569 00000218 48FFC1                  inc rcx
   570 0000021B EBEA                    jmp i2oLp
   571                                 
   572                                 exi2oLp:
   573                                 
   574                                 popLoop:
   575 0000021D 58                      pop rax
   576 0000021E 0430                    add al, "0"
   577 00000220 4188043E                mov byte [r14+rdi], al
   578 00000224 48FFC7                  inc rdi
   579 00000227 E2F2                    loop popLoop
   580                                 
   581 00000229 41C6043E00             mov byte [r14+rdi], NULL
   582                                 
   583 0000022E 415A                    pop r10
   584 00000230 4159                    pop r9
   585 00000232 5F                      pop rdi
   586 00000233 4158                    pop r8
   587 00000235 5E                      pop rsi
   588 00000236 5A                      pop rdx
   589 00000237 59                      pop rcx
   590 00000238 5B                      pop rbx
   591 00000239 58                      pop rax
   592                                 
   593 0000023A C3                     ret
   594                                 
   595                                 
   596                                 
   597                                 
   598                                 
   599                                 
   600                                 
   601                                 
   602                                 
   603                                 
   604                                 
   605                                 
   606                                 
   607                                 
   608                                 
   609                                 
   610                                 
   611                                 
   612                                 
   613                                 [global countDigits]
   614                                 countDigits:
   615                                 
   616                                 
   617 0000023B 50                     push rax
   618 0000023C 53                     push rbx
   619 0000023D 4889FB                 mov rbx, rdi
   620 00000240 57                     push rdi
   621 00000241 4150                   push r8
   622 00000243 4989F0                 mov r8, rsi
   623 00000246 56                     push rsi
   624 00000247 52                     push rdx
   625 00000248 4151                   push r9
   626 0000024A 4152                   push r10
   627 0000024C 4153                   push r11
   628                                 
   629                                 
   630                                 mainLp:
   631                                 
   632                                 
   633                                 
   634 0000024E 4C8B1425[00000000]      mov r10, qword[bfMax]
   635 00000256 4C391425[00000000]      cmp qword[curr], r10
   636 0000025E 734F                    jae endOfcurrChk
   637                                 
   638                                 
   639                                 
   640                                 
   641                                 
   642 00000260 48C7C000000000          mov rax, SYS_read
   643 00000267 488B3B                  mov rdi, qword[rbx]
   644 0000026A 48C7C6[00000000]        mov rsi, buff
   645 00000271 48C7C220A10700          mov rdx, BUFFSIZE
   646                                 
   647                                 
   648 00000278 4883F800                cmp rax, 0
   649 0000027C 7D0F                    jge skipReadErrMsg
   650                                 
   651                                 
   652 0000027E 48C7C7[00000000]        mov rdi, errFileRead
   653 00000285 E874000000              call printString
   654                                 
   655 0000028A E99B000000              jmp exit_program
   656                                 
   657                                  skipReadErrMsg:
   658                                 
   659                                 
   660 0000028F 4883F800                cmp rax, 0
   661 00000293 0F8490000000            je exit_program
   662                                 
   663                                 
   664                                 
   665 00000299 483D20A10700            cmp rax, BUFFSIZE
   666 0000029F 7D0E                    jge skipEOFcheck
   667                                 
   668 000002A1 C60425[00000000]01      mov byte[wasEOF], TRUE
   669                                 
   670 000002A9 48890425[00000000]      mov qword[bfMax], rax
   671                                 
   672                                  skipEOFcheck:
   673                                  endOfcurrChk:
   674                                 
   675 000002B1 48C70425[00000000]-     mov qword[curr], 0
   676 000002B1 00000000           
   677                                 
   678                                 
   679                                 
   680                                 
   681 000002BD 4C8B1C25[00000000]      mov r11, qword[curr]
   682 000002C5 458A8B[00000000]        mov r9b, byte[buff+r11]
   683                                 
   684                                 
   685                                 
   686 000002CC 833C25[00000000]05      cmp dword[skipLineCount], LINEMAX
   687 000002D4 7317                    jae lineCheckSkip
   688                                 
   689                                 
   690 000002D6 4180F90A                cmp r9b, LF
   691 000002DA 7505                    jne noLineCntInc
   692                                 
   693 000002DC FF0425[00000000]        inc dword[skipLineCount]
   694                                  noLineCntInc:
   695                                 
   696                                 
   697 000002E3 FF0425[00000000]        inc dword[curr]
   698                                 
   699 000002EA E95AFFFFFF              jmp mainLp
   700                                 
   701                                  lineCheckSkip:
   702                                 
   703                                 
   704                                 
   705                                 
   706                                 
   707                                 
   708                                 
   709 000002EF E955FFFFFF              jmp mainLp
   710                                 
   711                                 
   712 000002F4 415B                   pop r11
   713 000002F6 415A                   pop r10
   714 000002F8 4159                   pop r9
   715 000002FA 5A                     pop rdx
   716 000002FB 5E                     pop rsi
   717 000002FC 4158                   pop r8
   718 000002FE 5F                     pop rdi
   719 000002FF 5B                     pop rbx
   720 00000300 58                     pop rax
   721                                 
   722 00000301 C3                     ret
   723                                 
   724                                 
   725                                 
   726                                 
   727                                 
   728                                 
   729                                 
   730                                 
   731                                 
   732                                 
   733                                 
   734                                 
   735                                 
   736                                 
   737                                 
   738                                 
   739                                 
   740                                 [global showGraph]
   741                                 showGraph:
   742                                 
   743 00000302 C3                     ret
   744                                 
   745                                 
   746                                 
   747                                 
   748                                 
   749                                 
   750                                 
   751                                 
   752                                 
   753                                 
   754                                 
   755                                 
   756                                 
   757                                 
   758                                 
   759                                 
   760                                 
   761                                 
   762                                 
   763                                 
   764                                 
   765                                 
   766                                 
   767                                 
   768                                 
   769                                 
   770                                 
   771                                 
   772                                 
   773                                 
   774                                 
   775                                 
   776                                 
   777                                 
   778                                 
   779                                 
   780                                 
   781                                 
   782                                 
   783                                 [global printString]
   784                                 printString:
   785                                 
   786                                 
   787                                 
   788                                 
   789 00000303 48C7C200000000          mov rdx, 0
   790                                 strCountLoop:
   791 0000030A 803C1700                cmp byte [rdi+rdx], NULL
   792 0000030E 7403                    je strCountLoopDone
   793 00000310 48FFC2                  inc rdx
   794 00000313 EBF3                    jmp strCountLoop
   795                                 strCountLoopDone:
   796 00000315 4883FA00                cmp rdx, 0
   797 00000319 7411                    je printStringDone
   798                                 
   799                                 
   800                                 
   801                                 
   802 0000031B 48C7C001000000          mov rax, SYS_write
   803 00000322 4889FE                  mov rsi, rdi
   804 00000325 48C7C701000000          mov rdi, STDOUT
   805                                 
   806 0000032C 0F05                    syscall
   807                                 
   808                                 
   809                                 
   810                                 
   811                                 printStringDone:
   812 0000032E C3                      ret
   813                                 
   814                                 
   815                                 
   816                                 exit_program:
   817 0000032F 48C7C03C000000          mov rax, SYS_exit
   818 00000336 48C7C701000000          mov rdi, EXIT_NOSUCCESS
   819 0000033D 0F05                    syscall
